---
- name: Install Nextcloud in Docker
  hosts: nextcloud
  vars_files:
    - vars/docker.yml
  vars:
    container_name: "{{ nextcloud_container_name | default('nextcloud') }}"
    data_dir: "{{ nextcloud_data_directory | default('/var/lib/nextcloud') }}"
    additional_networks: "{{ nextcloud_additional_networks | default([]) }}"
    uid_gid: "33"
  tasks:
    - name: Create data directories
      ansible.builtin.file:
        dest: "{{ target }}"
        state: directory
        mode: "0700"
        owner: "{{ uid_gid }}"
        group: "{{ uid_gid }}"
      vars:
        target: "{{ data_dir }}/{{ item }}"
      loop:
        - "" # root dir
        - nextcloud
        - apps
        - config
        - data
      loop_control:
        label: "{{ target }}"
    - name: Create Nextcloud container
      community.docker.docker_container:
        detach: true
        restart_policy: unless-stopped
        state: started
        image: "{{ image }}"
        name: "{{ container.name }}"
        command: "{{ container.cmd }}"
        networks: "{{ networks_with_bridge }}"
        labels: "{{ container.labels }}"
        volumes:
          - "{{ data_dir }}/nextcloud:/var/www/html"
          - "{{ data_dir }}/apps:/var/www/html/custom_apps"
          - "{{ data_dir }}/config:/var/www/html/config"
          - "{{ data_dir }}/data:/var/www/html/data"
        env: "{{ merged_env }}"
      vars:
        image: docker.io/library/nextcloud{{ version }}
        version: :{{ nextcloud_version | default('27') }}
        merged_env: "{{ nextcloud_additional_environment | default({}) }}"
        labels: "{{ nextcloud_container_labels | default({}) }}"
      loop:
        - name: "{{ container_name }}"
          cmd: apache2-foreground
          labels: "{{ labels }}"
        - name: "{{ container_name }}-cron"
          cmd: /cron.sh
          labels: {}
      loop_control:
        loop_var: container
    - name: Run occ update routine
      vars:
        do_update: "{{ nextcloud_do_update is defined and nextcloud_do_update }}"
      when: do_update
      community.docker.docker_container_exec:
        container: "{{ container_name }}"
        command: ./occ upgrade
        user: www-data
...
